name: CI

on:
  push:
    branches: [main, develop]
    paths:
      - '**/*.go'
      - '**/go.mod'
      - '**/go.sum'
      - '.mise.toml'
  pull_request:
    branches: [main]
    paths:
      - '**/*.go'
      - '**/go.mod'
      - '**/go.sum'
      - '.mise.toml'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22', '1.23', '1.24']

    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Override Go version for matrix testing
        run: mise use go@${{ matrix.go-version }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Check test coverage
        run: |
          total_coverage=$(go tool cover -func=coverage.out | grep total | awk '{print $3}' | sed 's/%//')
          echo "Total test coverage: ${total_coverage}%"
          if (( $(echo "$total_coverage < 70" | bc -l) )); then
            echo "Test coverage is below 70%"
            exit 1
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
      - uses: actions/checkout@v4

      - name: Install mise
        uses: jdx/mise-action@v2

      - name: Build
        run: go build -v ./...

      - name: Build binary
        run: |
          GOOS=linux GOARCH=amd64 go build -o yg-linux-amd64
          GOOS=darwin GOARCH=amd64 go build -o yg-darwin-amd64
          GOOS=windows GOARCH=amd64 go build -o yg-windows-amd64.exe
